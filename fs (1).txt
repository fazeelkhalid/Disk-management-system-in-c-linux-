#ifndef FS_H
#define FS_H
/* Prevent multiple inclusion */

#include<stdint.h>
/* fs.h
 * Various definitions for OSP Practical Case Study E
 */

/* The bitmap */
extern uint8_t bitmap[20];
/* 160Kb disk with 1Kb blocks-> 160 bits for bitmap -> 20 bytes
 */

/* The directory entry */
struct entry
{
   char  user;
	char  name[9];
	char  extension[4];
	short blockcount;
	short block[8];
};

/* The Directory */
extern struct entry directory[32];
/* extern means its defined in another
   file, prevents multiple definition 
   errors
*/


void resetBitMap(); // reset all entities of the bitmap
int menu();//it will show menu on counsole
void initialiseEntry(int); // initialise entry array
void ListFiles(int); // List the names, extensions and block counts of all the valid files in the directory.
void displayBitmap();//print the value of each of the bits in the bitmap.
void openCreateFile(); // scan the directory if file exist then open that file. 
void ReadFile(int); // ist the blocks occupied by the currently open file
void writeFile(int); // allocate another block to the currently open file.
void deleteFile(int); // deallocate all blocks for the current file in the bitmap, and marks as free the directory entry for that file
int getNumber(int); // get nyumber for taking and in deletefile function



int toggle_bit(int block);
/* Toggles the value of the bit 'block', in
   the external array 'bitmap'.
   returns the current value of the bit
   Does NOT validate 'block'!!!
*/
int block_status(int block);
/* Returns the status of 'block',
   in the external array bitmap
   returns 0 if bitmap bit is 0, 
   not 0 if bitmap bit is 1
   Does NOT validate block!!!
*/
#endif

